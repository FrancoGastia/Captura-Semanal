name: Captura semanal Despegar - Stealth Avanzado

on:
  schedule:
    - cron: '0 9 * * 1'  # Lunes 9am UTC (6am Argentina)
  workflow_dispatch:

jobs:
  screenshot:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    strategy:
      fail-fast: false
      matrix:
        attempt: [1, 2]  # Dos intentos con diferentes configuraciones

    steps:
    - name: 📥 Clonar repositorio
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_PAT }}

    - name: 🔧 Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: 🛠️ Instalar dependencias stealth
      run: |
        npm install puppeteer puppeteer-extra puppeteer-extra-plugin-stealth

    - name: ⏰ Delay aleatorio inicial (simular humano)
      run: |
        delay=$((RANDOM % 300 + 60))  # Entre 1-5 minutos aleatorio
        echo "🕐 Esperando $delay segundos para simular comportamiento humano..."
        sleep $delay

    - name: 📸 Ejecutar captura stealth avanzada
      run: |
        echo "🚀 Iniciando captura stealth - Intento ${{ matrix.attempt }}..."
        node capture.js
      env:
        NODE_OPTIONS: '--max-old-space-size=6144'
        ATTEMPT_NUMBER: ${{ matrix.attempt }}

    - name: 🔍 Verificar y analizar captura
      run: |
        if [ -d "screenshots" ] && [ "$(ls -A screenshots)" ]; then
          echo "✅ Capturas encontradas:"
          ls -la screenshots/
          
          # Verificar tamaño y contenido
          for file in screenshots/*.png; do
            if [ -f "$file" ]; then
              size=$(wc -c < "$file")
              echo "📏 Tamaño de $file: $size bytes"
              
              # Si la imagen es muy pequeña, probablemente fue bloqueada
              if [ $size -lt 50000 ]; then
                echo "⚠️ ADVERTENCIA: Captura muy pequeña - posible bloqueo"
                echo "🔍 Verificando contenido de la captura..."
              else
                echo "✅ Captura de tamaño normal - probablemente exitosa"
              fi
            fi
          done
        else
          echo "❌ No se encontraron capturas"
          exit 1
        fi

    - name: 📊 Generar reporte detallado
      run: |
        mkdir -p reports
        timestamp=$(date +'%Y-%m-%d %H:%M:%S')
        echo "# 📸 Reporte Captura Stealth - $timestamp" > reports/reporte-${{ matrix.attempt }}.md
        echo "" >> reports/reporte-${{ matrix.attempt }}.md
        echo "## 🎯 Información del Intento" >> reports/reporte-${{ matrix.attempt }}.md
        echo "- **Intento**: ${{ matrix.attempt }}" >> reports/reporte-${{ matrix.attempt }}.md
        echo "- **Fecha**: $timestamp UTC" >> reports/reporte-${{ matrix.attempt }}.md
        echo "- **Workflow Run**: ${{ github.run_id }}" >> reports/reporte-${{ matrix.attempt }}.md
        echo "- **Estrategia**: Stealth Avanzado con delays humanizados" >> reports/reporte-${{ matrix.attempt }}.md
        echo "" >> reports/reporte-${{ matrix.attempt }}.md
        
        if [ -d "screenshots" ]; then
          echo "## 📁 Resultados" >> reports/reporte-${{ matrix.attempt }}.md
          for file in screenshots/*; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              size=$(wc -c < "$file")
              
              if [ $size -lt 50000 ]; then
                status="⚠️ POSIBLE BLOQUEO"
              else
                status="✅ EXITOSA"
              fi
              
              echo "- **$filename**: $size bytes - $status" >> reports/reporte-${{ matrix.attempt }}.md
            fi
          done
        fi

    - name: 💾 Commit resultados con análisis
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions Stealth Bot"
        git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
        
        git add screenshots/ reports/ || true
        
        if git diff --staged --quiet; then
          echo "📝 No hay cambios que commitear"
        else
          timestamp=$(date +'%Y-%m-%d %H:%M:%S')
          
          # Verificar si la captura parece exitosa
          success_status="🎯"
          if [ -f screenshots/*.png ]; then
            size=$(wc -c < screenshots/*.png 2>/dev/null || echo "0")
            if [ $size -gt 50000 ]; then
              success_status="✅ ÉXITO"
            else
              success_status="⚠️ POSIBLE BLOQUEO"
            fi
          fi
          
          git commit -m "$success_status Captura Stealth - $timestamp

          🤖 Bot: GitHub Actions Stealth
          📅 Fecha: $timestamp UTC  
          🎯 Intento: ${{ matrix.attempt }}
          🔬 Técnicas: Anti-detección avanzada, delays humanizados
          🌐 Target: Despegar Hoteles Argentina"
          
          git push origin HEAD || echo "Push falló, continuando..."
        fi

    - name: 📤 Subir evidencia para análisis
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: evidencia-stealth-${{ matrix.attempt }}
        path: |
          screenshots/
          reports/
        retention-days: 14
